<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <Nullable>enable</Nullable>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
    <SpaProxyServerUrl>http://localhost:5173</SpaProxyServerUrl>
    <SpaProxyLaunchCommand>yarn dev</SpaProxyLaunchCommand>
    <ImplicitUsings>enable</ImplicitUsings>
    <DebugType>embedded</DebugType>
    <RunPostBuildEvent>OnBuildSuccess</RunPostBuildEvent>
    <SatelliteResourceLanguages>en</SatelliteResourceLanguages>
    <PreserveCompilationContext>false</PreserveCompilationContext>
  </PropertyGroup>


  <ItemGroup>
    <PackageReference Include="AspNetCore.ReCaptcha" Version="1.8.0" />
    <PackageReference Include="Microsoft.AspNetCore.SpaProxy" Version="8.0.0" Condition="'$(Configuration)' == 'Debug'" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="8.0.0" Condition="'$(Configuration)' == 'Debug'" >
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="8.0.0" />
    <PackageReference Include="MiniValidation" Version="0.9.0" />
    <PackageReference Include="NSwag.AspNetCore" Version="14.0.0" Condition="'$(Configuration)' == 'Debug'"/>
    <PackageReference Include="nswag.msbuild" Version="14.0.0" Condition="'$(Configuration)' == 'Debug'">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
  </ItemGroup>
  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <None Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>
  <ItemGroup>
    <Content Remove="nswag.json" />
  </ItemGroup>
  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="yarn install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="yarn build" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>wwwroot\%(RecursiveDir)%(FileName)%(Extension)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>  
  <Target Name="NSwag" AfterTargets="PostBuildEvent" Condition=" '$(Configuration)' == 'Debug' ">
  <Exec WorkingDirectory="$(ProjectDir)" Command="$(NSwagExe_Net80) run nswag.json /variables:Configuration=$(Configuration)" />
</Target>
</Project>
